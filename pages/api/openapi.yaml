openapi: 3.0.1
info:
  title: Repl Web App API
  version: 1.0.0
  description: API for managing users, templates, posts, comments, reports, and tags.

paths:
  /users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
                  accessToken:
                    $ref: "#/components/schemas/JWTToken"
                  refreshToken:
                    $ref: "#/components/schemas/JWTToken"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "405":
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"

  /users/{userId}:
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
    get:
      summary: Get a user by ID
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    put:
      summary: Update a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        "200":
          description: User updated
    delete:
      summary: Delete a user
      responses:
        "204":
          description: User deleted

  /templates:
    get:
      summary: List all templates
      responses:
        "200":
          description: A list of templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Template"
    post:
      summary: Create a new template
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateCreate"
      responses:
        "201":
          description: Template created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Template"

  /templates/{templateId}:
    parameters:
      - in: path
        name: templateId
        required: true
        schema:
          type: integer
    get:
      summary: Get a template by ID
      responses:
        "200":
          description: Template details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Template"
    put:
      summary: Update a template
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateUpdate"
      responses:
        "200":
          description: Template updated
    delete:
      summary: Delete a template
      responses:
        "204":
          description: Template deleted

  /posts:
    get:
      summary: List all posts
      responses:
        "200":
          description: A list of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"
    post:
      summary: Create a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCreate"
      responses:
        "201":
          description: Post created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"

  /posts/{postId}:
    parameters:
      - in: path
        name: postId
        required: true
        schema:
          type: integer
    get:
      summary: Get a post by ID
      responses:
        "200":
          description: Post details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
    put:
      summary: Update a post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostUpdate"
      responses:
        "200":
          description: Post updated
    delete:
      summary: Delete a post
      responses:
        "204":
          description: Post deleted

  /comments:
    get:
      summary: List all comments
      responses:
        "200":
          description: A list of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
    post:
      summary: Create a new comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentCreate"
      responses:
        "201":
          description: Comment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"

  /comments/{commentId}:
    parameters:
      - in: path
        name: commentId
        required: true
        schema:
          type: integer
    get:
      summary: Get a comment by ID
      responses:
        "200":
          description: Comment details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
    put:
      summary: Update a comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentUpdate"
      responses:
        "200":
          description: Comment updated
    delete:
      summary: Delete a comment
      responses:
        "204":
          description: Comment deleted

  /reports:
    post:
      summary: Create a new report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportCreate"
      responses:
        "201":
          description: Report created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"

  /tags:
    get:
      summary: List all tags
      responses:
        "200":
          description: A list of tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tag"
    post:
      summary: Create a new tag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagCreate"
      responses:
        "201":
          description: Tag created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"

components:
  schemas:
    User:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        isAdmin:
          type: boolean
        avatar:
          type: string
        templates:
          type: array
          items:
            $ref: "#/components/schemas/Template"
        posts:
          type: array
          items:
            $ref: "#/components/schemas/Post"
        comments:
          type: array
          items:
            $ref: "#/components/schemas/Comment"
        reports:
          type: array
          items:
            $ref: "#/components/schemas/Report"

    UserUpdate:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        isAdmin:
          type: boolean
        avatar:
          type: string

    Template:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: string
          format: date-time
        title:
          type: string
        explanation:
          type: string
        code:
          type: string
        userId:
          type: integer
        user:
          $ref: "#/components/schemas/User"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"

    TemplateCreate:
      type: object
      properties:
        title:
          type: string
        explanation:
          type: string
        code:
          type: string
        userId:
          type: integer
        tags:
          type: array
          items:
            type: string

    TemplateUpdate:
      type: object
      properties:
        title:
          type: string
        explanation:
          type: string
        code:
          type: string
        tags:
          type: array
          items:
            type: string

    Post:
      type: object
      properties:

    ErrorMessage:
      type: object
      properties:
        message:
          type: string
